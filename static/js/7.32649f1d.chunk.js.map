{"version":3,"sources":["Utils/lazyPreload.js","Components/Overlay/Overlay.js","Images/OverlayGlow.png"],"names":["lazyPreload","dynamicImport","Component","lazy","preload","ContactForm","Main","Overlay","props","setOverlayOpen","useContext","OverlayContext","location","useLocation","useState","isOpen","setIsOpen","iconAnimation","useRef","overlayAnimation","linkWrapperRef","iconWrapperRef","handleOverlay","preventClick","open","current","classList","add","openState","useEffect","pause","document","querySelector","play","reverse","then","remove","pathname","overlayIconTimeline","gsap","timeline","paused","fromTo","x","duration","ease","y","rotate","overlayTimeline","pointerEvents","opacity","skewX","skewY","stagger","each","from","strokeDashoffset","addLabel","className","onClick","ref","to","pathName","gradient","src","Glow","alt","module","exports"],"mappings":"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","file":"static/js/7.32649f1d.chunk.js","sourcesContent":["import { lazy } from 'react';\n\nexport function lazyPreload(dynamicImport) {\n  const Component = lazy(dynamicImport);\n  Component.preload = dynamicImport;\n  return Component;\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { OverlayContext } from '../../Utils/OverlayContext';\nimport { useLocation } from 'react-router-dom';\nimport { gsap } from 'gsap';\nimport { lazyPreload } from '../../Utils/lazyPreload';\nimport { Overlay as Abstract } from '../../SVGs/SVG';\nimport { LinkedIn, GitHub, Medium } from '../../SVGs/SVG';\nimport { Link } from 'react-router-dom';\nimport Glow from '../../Images/OverlayGlow.png';\nimport './Overlay.scss';\nconst ContactForm = lazyPreload(() => import('../ContactForm/ContactForm'));\nconst Main = lazyPreload(() => import('../Main'));\n\nconst Overlay = props => {\n  const { setOverlayOpen } = useContext(OverlayContext);\n  const location = useLocation();\n  const [isOpen, setIsOpen] = useState(false);\n  const iconAnimation = useRef();\n  const overlayAnimation = useRef();\n  const linkWrapperRef = useRef();\n  const iconWrapperRef = useRef();\n  \n  const handleOverlay = (preventClick, open) => {\n    if (preventClick) {\n      iconWrapperRef.current.classList.add('preventClick');\n      linkWrapperRef.current.classList.add('preventClick');\n    }\n    const openState = open ? open : !isOpen;\n    // start preloading other routes when overlay is opened\n    if (openState) {\n      ContactForm.preload();\n      Main.preload();\n    }\n    setIsOpen(openState);\n  }\n  \n  useEffect(() => {\n    if (iconAnimation.current) {\n      iconAnimation.current.pause();\n      overlayAnimation.current.pause();\n      if (isOpen) {\n        document.querySelector('body').classList.add('preventScroll');\n        iconAnimation.current.play();\n        overlayAnimation.current.play();\n        setOverlayOpen(true);\n      } else  {\n        iconAnimation.current.reverse();\n        overlayAnimation.current.reverse().then(() => {\n          document.querySelector('body').classList.remove('preventScroll');\n          iconWrapperRef.current.classList.remove('preventClick');\n          linkWrapperRef.current.classList.remove('preventClick');\n          setOverlayOpen(false)\n        });\n      }\n    }\n  }, [isOpen]); // eslint-disable-line\n\n  useEffect(() => {\n    const { pathname } = location;\n    if (isOpen && pathname) handleOverlay(true, false);\n  }, [location.pathname]); // eslint-disable-line\n\n  useEffect(() => {\n    const overlayIconTimeline = gsap.timeline({ paused: true });\n    overlayIconTimeline.fromTo('.Overlay__icon--top', {\n      x: 0,\n    }, {\n      duration: 0.5,\n      ease: 'back.in',\n      x: '0.5em'\n    }, 0);\n    overlayIconTimeline.fromTo('.Overlay__icon--top', {\n      y: 0,\n    }, {\n      duration: 0.3,\n      ease: 'back.in',\n      y: '0.425em'\n    }, '>');\n    overlayIconTimeline.fromTo('.Overlay__icon--bottom', {\n      y: 0,\n    }, {\n      duration: 0.3,\n      ease: 'back.in',\n      y: '-0.425em'\n    }, '<');\n    overlayIconTimeline.fromTo('.Overlay__icon--top', {\n      rotate: 0,\n    }, {\n      duration: 0.8,\n      ease: 'back.out',\n      rotate: '225deg'\n    }, '>');\n    overlayIconTimeline.fromTo('.Overlay__icon--bottom', {\n      rotate: 0,\n    }, {\n      duration: 0.8,\n      ease: 'back.out',\n      rotate: '315deg'\n    }, '<');\n    iconAnimation.current = overlayIconTimeline;\n\n    const overlayTimeline = gsap.timeline({ paused: true });\n    overlayTimeline.fromTo('.Overlay', {\n      pointerEvents: 'none',\n    }, {\n      pointerEvents: 'auto',\n    }, 0);\n    overlayTimeline.fromTo('.Overlay__backgroundCover', {\n      opacity: 0,\n      pointerEvents: 'none',\n    }, {\n      duration: 0.6,\n      ease: 'slow.inOut',\n      opacity: 1,\n      pointerEvents: 'auto',\n    }, 0);\n    overlayTimeline.fromTo('.Overlay__link', {\n      skewX: -15,\n      skewY: 15,\n      y: -15,\n      opacity: 0,\n    }, {\n      duration: 0.5,\n      ease: 'ease.inOut',\n      skewX: 0,\n      skewY: 0,\n      y: 0,\n      opacity: 1,\n      stagger: {\n        each: 0.2,\n        from: 'start',\n      }\n    }, '>');\n    overlayTimeline.fromTo('.Overlay__abstract--path', {\n      strokeDashoffset: 770,\n    }, {\n      duration: 1,\n      ease: 'sine.in',\n      strokeDashoffset: 0,\n      stagger: {\n        each: 0.02,\n        from: 'center',\n      }\n    }, '<0.2');\n    overlayTimeline.addLabel('socialIcon', '<0.2');\n    overlayTimeline.fromTo('.Overlay__glow', {\n      opacity: 0,\n    }, {\n      duration: 0.5,\n      ease: 'ease.inOut',\n      opacity: 1,\n    }, '>-0.3');\n    overlayTimeline.fromTo('.Overlay__socialIcon--GitHub', {\n      strokeDashoffset: -395,\n    }, {\n      duration: 0.6,\n      ease: 'power1.inOut',\n      strokeDashoffset: 0,\n    }, 'socialIcon');\n    overlayTimeline.fromTo('.Overlay__socialIcon--Medium', {\n      strokeDashoffset: -485,\n    }, {\n      duration: 0.6,\n      ease: 'power1.inOut',\n      strokeDashoffset: 0,\n    }, 'socialIcon');\n    overlayTimeline.fromTo('.Overlay__socialIcon--LinkedIn', {\n      strokeDashoffset: -265,\n    }, {\n      duration: 0.6,\n      ease: 'power1.inOut',\n      strokeDashoffset: 0,\n    }, 'socialIcon');\n    overlayAnimation.current = overlayTimeline;\n    document.querySelector('.Overlay').classList.remove('hide');\n  }, []);\n\n  return <>\n    <div className=\"Overlay__iconWrapper\" onClick={() => handleOverlay(false)} ref={iconWrapperRef}>\n      <div className=\"Overlay__icon Overlay__icon--top\"></div>\n      <div className=\"Overlay__icon Overlay__icon--bottom\"></div>\n    </div>\n    <div className=\"Overlay hide\">\n      <div className=\"Overlay__linkWrapper center\" ref={linkWrapperRef}>\n        <Link to=\"/home\">\n          <div className=\"Overlay__link Overlay__link--home\" onClick={() => handleOverlay(true)}>Home</div>\n        </Link>\n        <Link to=\"/projects\">\n          <div className=\"Overlay__link Overlay__link--projects\" onClick={() => handleOverlay(true)}>Projects</div>\n        </Link>\n        <Link to=\"/about\">\n          <div className=\"Overlay__link Overlay__link--about\" onClick={() => handleOverlay(true)}>About</div>\n        </Link>\n        <Link to=\"/contact\">\n          <div className=\"Overlay__link Overlay__link--contact\" onClick={() => handleOverlay(true)}>Contact</div>\n        </Link>\n      </div>\n\n      <div className=\"Overlay__socialIconWrapper\">\n        <GitHub className=\"Overlay__socialIcon Overlay__socialIcon--GitHub\" pathName=\"Overlay__GitHub--path\" gradient=\"overlay\" />\n        <Medium className=\"Overlay__socialIcon Overlay__socialIcon--Medium\" pathName=\"Overlay__Medium--path\" gradient=\"overlay\" />\n        <LinkedIn className=\"Overlay__socialIcon Overlay__socialIcon--LinkedIn\" pathName=\"Overlay__LinkedIn--path\" gradient=\"overlay\" />\n      </div>\n\n      <div className=\"Overlay__art\">\n        <Abstract className=\"Overlay__abstract center\" pathName=\"Overlay__abstract--path\" />\n        <img className=\"Overlay__glow center\" src={Glow} alt=\"abstract glow art\" />\n      </div>\n    </div>\n    <div className=\"Overlay__backgroundCover\"></div>\n  </>;\n}\n\nexport default Overlay;","module.exports = __webpack_public_path__ + \"static/media/OverlayGlow.71fc5f45.png\";"],"sourceRoot":""}