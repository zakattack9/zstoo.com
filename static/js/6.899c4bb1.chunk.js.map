{"version":3,"sources":["Components/ProjectGlow.js","Components/Project/PreRenderProject.js","Components/Project/Project.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Components/NavLink/NavLink.js","Data/ProjectData.js","Components/Skim/Skim.js","Images/Project1Glow.png","Images/Project2Glow.png","Images/Project3Glow.png","Images/Project4Glow.png","Images/Project5Glow.png"],"names":["ProjectGlow","props","className","src","projectId","Project1Glow","Project2Glow","Project3Glow","Project4Glow","Project5Glow","determineGlow","alt","PreRenderProject","project","style","width","height","overflow","pointerEvents","opacity","position","zIndex","imageUrls","map","imgUrl","i","key","process","id","Project","history","useHistory","useParams","useState","setProject","nextProjectData","setNextProjectData","projectLinkStyles","setProjectLinkStyles","galleryRef","useRef","infoRef","projectRef","projectAnimation","projectAnimationOut","useEffect","current","classList","add","pause","location","projectData","PROJECT_DATA","find","projectObj","push","color","colors","text","textShadow","border","boxShadow","borderShadow","projectTimeline","gsap","timeline","paused","fromTo","xPercent","duration","ease","stagger","each","from","yPercent","strokeDashoffset","play","remove","ref","NavLink","lineWidth","href","left","name","onClick","nextProject","projectTimelineOut","onComplete","pathname","includes","scrollLeft","scrollTop","to","Skim","type","pathName","aTagName","githubLink","fullDesc","header","techStack","tech","year","role","projectLink","target","rel","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","styles","gridTemplateColumns","transform","rotate","textStyles","lineStyles","backgroundColor","leftStyles","linkText","modifier","shortDesc","module","exports"],"mappings":"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","file":"static/js/6.899c4bb1.chunk.js","sourcesContent":["import React from 'react';\nimport Project1Glow from '../Images/Project1Glow.png';\nimport Project2Glow from '../Images/Project2Glow.png';\nimport Project3Glow from '../Images/Project3Glow.png';\nimport Project4Glow from '../Images/Project4Glow.png';\nimport Project5Glow from '../Images/Project5Glow.png';\n\nconst ProjectGlow = props => {\n  const determineGlow = () => {\n    switch(props.projectId) {\n      case 1: return Project1Glow;\n      case 2: return Project2Glow;\n      case 3: return Project3Glow;\n      case 4: return Project4Glow;\n      case 5: return Project5Glow;\n      default: return Project1Glow;\n    }\n  }\n\n  return <img className={props.className} src={determineGlow()} alt=\"abstract project glow art\"/>\n}\n\nexport default ProjectGlow;","import React from 'react';\nimport ProjectGlow from '../ProjectGlow';\n\n// use this component to render all static assets of the next project\nconst PreRenderProject = props => {\n  const { project = null } = props;\n  const styles = {\n    width: '0%',\n    height: '0%',\n    overflow: 'hidden',\n    pointerEvents: 'none',\n    opacity: 0,\n    position: 'absolute',\n    zIndex: -100,\n  }\n\n  return project ? (\n    <div className=\"PreRenderProject\" style={styles}>\n      {project.imageUrls.map((imgUrl, i) => {\n        return <img key={i} src={`${process.env.PUBLIC_URL}/${imgUrl}`} alt=\"sample project\" />\n      })}\n      <ProjectGlow projectId={project.id} />\n    </div>\n  ) : (<></>);\n}\n\nexport default PreRenderProject;","import React, { useEffect, useState, useRef } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { gsap } from 'gsap';\nimport { Project as Abstract, GitHub, ProjectId } from '../../SVGs/SVG';\nimport ProjectGlow from '../ProjectGlow';\nimport Skim from '../Skim/Skim';\nimport NavLink from '../NavLink/NavLink';\nimport PreRenderProject from './PreRenderProject';\nimport PROJECT_DATA from '../../Data/ProjectData';\nimport './Project.scss';\n\nconst Project = props => {\n  const history = useHistory();\n  const { id } = useParams();\n  const [project, setProject] = useState(null);\n  const [nextProjectData, setNextProjectData] = useState(null);\n  const [projectLinkStyles, setProjectLinkStyles] = useState({});\n  const galleryRef = useRef();\n  const infoRef = useRef();\n  const projectRef = useRef();\n  // immutable refs to store GSAP animations\n  const projectAnimation = useRef();\n  const projectAnimationOut = useRef();\n\n  useEffect(() => {\n    // const { action, location } = history;\n    if (project) {\n      projectRef.current.classList.add('hide');\n      if (projectAnimation.current) projectAnimation.current.pause();\n      if (projectAnimationOut.current) projectAnimationOut.current.pause();\n    }\n  }, [history, history.location]); // eslint-disable-line\n  \n  useEffect(() => {\n    const projectData = PROJECT_DATA.find(projectObj => projectObj.id === +id);\n    if (!projectData) history.push(`/project/1`);\n    setProject(projectData);\n  }, [id]); // eslint-disable-line\n  \n  useEffect(() => {\n    if (project) {\n      setProjectLinkStyles({\n        color: project.colors.text,\n        textShadow: `-1px 0px 5px ${project.colors.textShadow}`,\n        border: `1px solid ${project.colors.border}`,\n        boxShadow: `-1px 0px 8px ${project.colors.borderShadow}`,\n      });\n\n      const projectTimeline = gsap.timeline({ paused: true });\n      projectTimeline.fromTo('.Project__photo', {\n        xPercent: 40,\n        opacity: 0,\n      },{\n        duration: 1.5,\n        ease: 'slow.out',\n        xPercent: 0,\n        opacity: 1,\n        stagger: {\n          each: 0.2,\n          from: 'start'\n        }\n      }, 0);\n      projectTimeline.fromTo('.Project__title', {\n        opacity: 0,\n        yPercent: 15,\n      }, {\n        duration: 1.6,\n        ease: 'slow.inOut',\n        opacity: 1,\n        yPercent: 0,\n      }, '<0.5');\n      projectTimeline.fromTo('.Project__info', {\n        opacity: 0,\n        yPercent: -5,\n      }, {\n        duration: 1.4,\n        ease: 'slow.inOut',\n        opacity: 1,\n        yPercent: 0,\n      }, '<');\n      projectTimeline.fromTo('.Project__abstract--path', {\n        strokeDashoffset: 770,\n      }, {\n        duration: 2,\n        ease: 'power1.out',\n        strokeDashoffset: 0,\n        stagger: {\n          each: 0.02,\n          from: 'end',\n        }\n      }, '>-1.5');\n      projectTimeline.fromTo('.Project__GitHub--path', {\n        strokeDashoffset: -395,\n      }, {\n        duration: 0.8,\n        ease: 'power1.inOut',\n        strokeDashoffset: 0,\n      }, '<0.7');\n      projectTimeline.fromTo('.Project__id', {\n        opacity: 0,\n        xPercent: -5,\n      }, {\n        duration: 1.5,\n        ease: 'slow.inOut',\n        opacity: 1,\n        xPercent: 0,\n      }, '<0.5');\n      projectTimeline.fromTo('.Project__glow', {\n        opacity: 0,\n      }, {\n        duration: 0.5,\n        opacity: 1,\n      }, '<0.3');\n      projectTimeline.fromTo('.Project__NavLink--AllProjects', {\n        opacity: 0,\n        xPercent: -20,\n      }, {\n        duration: 1,\n        ease: 'ease.inOut',\n        opacity: 1,\n        xPercent: 0,\n      }, '<0.2');\n      projectTimeline.fromTo('.Project__NavLink--NextProject', {\n        opacity: 0,\n        xPercent: 70,\n      }, {\n        duration: 1,\n        ease: 'ease.inOut',\n        opacity: 1,\n        xPercent: 0,\n      }, '<');\n      projectAnimation.current = projectTimeline.play();\n\n      // prevents project from quickly displaying before GSAP animation is fully created\n      projectRef.current.classList.remove('hide');\n    }\n  }, [project]);\n\n  const nextProject = () => {\n    const nextProject = PROJECT_DATA.find(projectObj => projectObj.id === project.id + 1) || PROJECT_DATA[0];\n    setNextProjectData(nextProject);\n    const animationComplete = () => {\n      if (history.location.pathname.includes(\"/project\")) {\n        galleryRef.current.scrollLeft = 0;\n        infoRef.current.scrollTop = 0;\n        history.push(`/project/${nextProject.id}`);\n      }\n    }\n    \n    const projectTimelineOut = gsap.timeline({\n      onComplete: animationComplete,\n      paused: true,\n    });\n    projectTimelineOut.to('.Project__NavLink--AllProjects', {\n      duration: 0.7,\n      ease: 'ease.inOut',\n      opacity: 0,\n      xPercent: -20,\n    }, 0);\n    projectTimelineOut.to('.Project__NavLink--NextProject', {\n      duration: 0.7,\n      ease: 'ease.inOut',\n      opacity: 0,\n      xPercent: 70,\n    }, 0);\n    projectTimelineOut.to('.Project__glow', {\n      duration: 0.5,\n      opacity: 0,\n    }, 0);\n    projectTimelineOut.to('.Project__abstract--path', {\n      duration: 2,\n      ease: 'power1.out',\n      strokeDashoffset: -770,\n      stagger: {\n        each: 0.02,\n        from: 'start',\n      }\n    }, '<0.5');\n    projectTimelineOut.to('.Project__GitHub--path', {\n      duration: 0.8,\n      ease: 'power1.inOut',\n      strokeDashoffset: 395,\n    }, '<0.2');\n    projectTimelineOut.to('.Project__id', {\n      duration: 1.5,\n      ease: 'slow.inOut',\n      opacity: 0,\n      xPercent: -5,\n    }, '<0.1');\n    projectTimelineOut.to('.Project__photo', {\n      duration: 1.3,\n      ease: 'power1.inOut',\n      xPercent: 50,\n      opacity: 0,\n      stagger: {\n        each: 0.2,\n        from: 'end'\n      }\n    }, '<0.3');\n    projectTimelineOut.to('.Project__title', {\n      duration: 1,\n      ease: 'power1.inOut',\n      opacity: 0,\n      yPercent: 15,\n    }, '<0.1');\n    projectTimelineOut.to('.Project__info', {\n      duration: 1,\n      ease: 'power1.inOut',\n      opacity: 0,\n      yPercent: -5,\n    }, '<');\n    projectAnimationOut.current = projectTimelineOut.play();\n  }\n  \n  return project ? (\n    <div className=\"Project hide\" ref={projectRef}>\n      <div className=\"Project__data\">\n        {/* TOP SECTION */}\n        <NavLink className=\"Project__NavLink Project__NavLink--AllProjects\" text={`All\\nProjects`} lineWidth={25} href='/projects' left />\n        \n        {/* MIDDLE SECTION */}\n        <div className=\"Project__title\">{project.name}</div>\n        <NavLink className=\"Project__NavLink Project__NavLink--NextProject\" text={`Next\\nProject`} lineWidth={15} onClick={nextProject} />\n        <ProjectId className=\"Project__id\" projectId={`0${project.id}`} />\n       \n        {/* GALLERY SECTION */}\n        <Skim className=\"Project__Skim Project__Skim--gallery\" type='toLeft' width={10} height={100} />\n        <div className=\"Project__gallery\" ref={galleryRef}>\n          {project.imageUrls.map((imgUrl, i) => {\n            return <img className=\"Project__photo\" key={i} src={`${process.env.PUBLIC_URL}/${imgUrl}`} alt=\"sample project\" />\n          })}\n        </div>\n        \n        {/* BOTTOM SECTION */}\n        <GitHub className=\"Project__GitHub\" pathName=\"Project__GitHub--path\" aTagName=\"Project__GitHub--aTag\" projectId={project.id} githubLink={project.githubLink} />\n        <div className=\"Project__info\" ref={infoRef}>\n          <div className=\"Project__description\">{project.fullDesc}</div>\n          <div className=\"Project__details\">\n            <div className=\"Project__techStack\">\n              <div className=\"Project__detailsText Project__detailsText--header\" style={{color: project.colors.header}}>\n                {`Tech\\nStack`}\n              </div>\n              {project.techStack.map((tech, i) => {\n                return <div className=\"Project__detailsText Project__detailsText--text\" key={i}>{tech}</div>\n              })}\n            </div>\n            <div className=\"Project__year\">\n              <div className=\"Project__detailsText Project__detailsText--header\" style={{color: project.colors.header}}>\n                Year\n              </div>\n              <div className=\"Project__detailsText Project__detailsText--text\">\n                {project.year}\n              </div>\n            </div>\n            <div className=\"Project__role\">\n              <div className=\"Project__detailsText Project__detailsText--header\" style={{color: project.colors.header}}>\n                Role\n              </div>\n              <div className=\"Project__detailsText Project__detailsText--text\">\n                {project.role}\n              </div>\n            </div>\n            <div className=\"Project__link\">\n              <a href={project.projectLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                <div className=\"Project__linkText\" style={projectLinkStyles}>Visit Project &gt; </div>\n               </a>\n            </div>\n          </div>\n        </div>\n        <Skim className=\"Project__Skim Project__Skim--art\" type='project' width={85} height={100} />\n      </div>\n\n      <div className=\"Project__art\">\n        <Abstract className=\"Project__abstract\" pathName=\"Project__abstract--path\" projectId={project.id} />\n        <ProjectGlow className=\"Project__glow\" projectId={project.id} />\n      </div>\n      <PreRenderProject project={nextProjectData} />\n    </div>\n  ) : (<></>);\n}\n\nexport default Project;","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavLink.scss';\n\n// component used for navigation links\nconst NavLink = props => {\n  const styles = {\n    gridTemplateColumns: `min-content ${props.lineWidth}px`,\n    transform: `rotate(${props.rotate}deg)`,\n  };\n\n  const textStyles = {\n    color: props.color\n  };\n\n  const lineStyles = {\n    backgroundColor: props.color\n  }\n\n  const leftStyles = {\n    ...styles,\n    gridTemplateColumns: `${props.lineWidth}px min-content`,\n  };\n\n  const linkText = (modifier) => {\n    if (props.href) {\n      return (\n        <Link to={props.href}>\n          <div className={`NavLink__text NavLink__text--${modifier}`} style={textStyles}>{props.text}</div>\n        </Link>\n      );\n    } else if (props.onClick) {\n      return (\n        <div className={`NavLink__text NavLink__text--${modifier}`} onClick={props.onClick} style={textStyles}>{props.text}</div>\n      );\n    } else {\n      return (\n        <div className={`NavLink__text NavLink__text--${modifier}`} style={textStyles}>{props.text}</div>\n      );\n    }\n  }\n\n  return props.left ? (\n    <div className={`NavLink ${props.className}`} style={leftStyles}>\n      <div className=\"NavLink__line\" style={lineStyles}></div>\n      {linkText('left')}\n    </div>\n  ) : (\n    <div className={`NavLink ${props.className}`} style={styles}>\n      {linkText('right')}\n      <div className=\"NavLink__line\" style={lineStyles}></div>\n    </div>\n  );\n}\n\nexport default NavLink","// imageUrls must be relative to \"public\" folder\nconst PROJECT_DATA = [\n  {\n    id: 1,\n    name: \"Stockup\",\n    shortDesc: \"Stock market news web scraper\",\n    fullDesc: \"An application leveraging web scraping and APIs to gather news about stocks from various sources into one place.\\n\\nThe UI is built with React and interacts with a Node.js backend that handles all the parsing of news articles and stock ticker information.\",\n    techStack: ['React', 'CSS', 'Node.js', 'Heroku'],\n    githubLink: 'https://github.com/zakattack9/stockup',\n    projectLink: 'http://stockup.zaksakata.com',\n    imageUrls: ['images/projects/stockup1.png', 'images/projects/stockup1.png'],\n    year: 2019,\n    role: 'Full Stack',\n    colors: {\n      header: '#00D35E',\n      text: '#AFD560',\n      textShadow: '#769434',\n      border: '#49CC59',\n      borderShadow: '#067c14',\n    }\n  },\n  {\n    id: 2,\n    name: \"Lanakila Meals on Wheels\",\n    shortDesc: \"Mass medium communication tool\",\n    fullDesc: \"A mass medium communication tool that can broadcast various types of messages to members of the Lanakila Meals on Wheels elderly meal service.\\n\\nAWS SNS is used to create groups and subscribers that messages can be pushed out to; additionally, AWS Polly was used to convert broadcasted messages to audio for recipients to listen to. All data is stored using a PostgreSQL DB on AWS RDS.\",\n    techStack: ['AWS', 'HTML', 'CSS', 'JS'],\n    githubLink: 'https://github.com/zakattack9/Lanakila-Meals-on-Wheels-Project',\n    projectLink: 'https://zakattack9.github.io/Lanakila-Meals-on-Wheels-Project/index.html',\n    imageUrls: ['images/projects/lanakila1.png', 'images/projects/lanakila2.png', 'images/projects/lanakila3.png'],\n    year: 2018,\n    role: 'Full Stack',\n    colors: {\n      header: '#15A280',\n      text: '#dd7f26',\n      textShadow: '#a75a13',\n      border: '#06ac85',\n      borderShadow: '#058d6d',\n    }\n  },\n  {\n    id: 3,\n    name: \"Power Outage Tracker\",\n    shortDesc: \"Tracks nearby facilities for risk of power outages\",\n    fullDesc: \"Helps track the risk of multiple facilities undergoing a power outage through a nice graphical visualization using D3.js.\\n\\nPower outage risk and status is determined through a combination of factors including data from PowerOutage API, user submitted outage reports, and the latest weather data in the area.\",\n    techStack: ['React', 'D3.js', 'AWS', 'CSS'],\n    githubLink: 'https://github.com/zakattack9/SF-Hack',\n    projectLink: 'https://github.com/zakattack9/SF-Hack',\n    imageUrls: ['images/projects/power1.png', 'images/projects/power2.png', 'images/projects/power3.png'],\n    year: 2019,\n    role: 'Full Stack',\n    colors: {\n      header: '#FF1973',\n      text: '#FFB200',\n      textShadow: '#aa7905',\n      border: '#c20654',\n      borderShadow: '#940641',\n    }\n  },\n  {\n    id: 4,\n    name: \"Zak Sakata Photos\",\n    shortDesc: \"My photography website\",\n    fullDesc: \"Personal website showcasing my photography and videography portfolio. It’s built with various libraries including AOS, Masonry.js, and TwentyTwenty.\\n\\nThe site is deployed in a static AWS S3 bucket with the contact page using DynamoDB to store contact messages and AWS SNS to push out notifications to my devices.\",\n    techStack: ['Bootstrap', 'jQuery', 'HTML', 'AWS'],\n    githubLink: 'https://github.com/zakattack9/photos.zaksakata.com',\n    projectLink: 'https://photos.zaksakata.com',\n    imageUrls: ['images/projects/zak1.png', 'images/projects/zak2.png', 'images/projects/zak3.png'],\n    year: 2018,\n    role: 'Full Stack',\n    colors: {\n      header: '#9F45FF',\n      text: '#ff682c',\n      textShadow: '#cc3c02',\n      border: '#7a1af7',\n      borderShadow: '#6b24c7',\n    }\n  },\n  {\n    id: 5,\n    name: \"Chroma Vibez\",\n    shortDesc: \"Finds Spotify playlists based off photos\",\n    fullDesc: \"A unique twist on music and color, with the driving thought of what color would sound like?\\n\\nUsers can upload any picture that is then processed through a color recognition algorithm that helps Chroma Vibez determine what Spotify playlist to return based off the mood and colors of the picture uploaded.\",\n    techStack: ['Spotify', 'HTML', 'CSS', 'JS'],\n    githubLink: 'https://github.com/zakattack9/chromaVibez',\n    projectLink: 'https://zakattack9.github.io/chromaVibez/index.html',\n    imageUrls: ['images/projects/chroma1.png', 'images/projects/chroma2.png', 'images/projects/chroma3.png'],\n    year: 2017,\n    role: 'Front End',\n    colors: {\n      header: '#16D1E4',\n      text: '#0785fc',\n      textShadow: '#0078bd',\n      border: '#16D1E4',\n      borderShadow: '#0a6974',\n    }\n  },\n];\n\nexport default PROJECT_DATA;","import React from 'react';\nimport './Skim.scss'\n\n// component used for adding skims over text or media\nconst Skim = props => {\n  const types = ['toRight', 'toLeft', 'toTop', 'project'];\n  const styles = {\n    width: `${props.width}%`,\n    height: `${props.height}%`\n  };\n\n  return types.includes(props.type) ? (\n    <div className={`${props.className} Skim--${props.type}`} style={styles}></div>\n  ) : (\n    <div className={`${props.className} Skim`} style={styles}></div>\n  );\n}\n\nexport default Skim;","module.exports = __webpack_public_path__ + \"static/media/Project1Glow.63d3fb2e.png\";","module.exports = __webpack_public_path__ + \"static/media/Project2Glow.6bc89e87.png\";","module.exports = __webpack_public_path__ + \"static/media/Project3Glow.2ada5fcb.png\";","module.exports = __webpack_public_path__ + \"static/media/Project4Glow.a2220790.png\";","module.exports = __webpack_public_path__ + \"static/media/Project5Glow.8aa366a0.png\";"],"sourceRoot":""}